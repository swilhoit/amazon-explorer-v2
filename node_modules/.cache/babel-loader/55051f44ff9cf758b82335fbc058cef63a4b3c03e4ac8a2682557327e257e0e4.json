{"ast":null,"code":"var _jsxFileName = \"/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box, CircularProgress, Tabs, Tab, CssBaseline } from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport DataTable from './DataTable';\nimport ScatterPlot from './ScatterPlot';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark'\n  }\n});\nconst MainComponent = () => {\n  _s();\n  const [keywords, setKeywords] = useState('');\n  const [data, setData] = useState([]);\n  const [summaryData, setSummaryData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const handleKeywordsChange = event => {\n    setKeywords(event.target.value);\n    console.log('Keywords changed:', event.target.value);\n  };\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const handleFetchData = async () => {\n    setLoading(true);\n    setData([]);\n    console.log('Fetching data for keywords:', keywords);\n    const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n    const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n    const url = \"https://developer.junglescout.com/api/product_database_query?marketplace=us\";\n    const headers = {\n      'Authorization': `${keyName}:${apiKey}`,\n      'X-API-Type': 'junglescout',\n      'Accept': 'application/vnd.junglescout.v1+json',\n      'Content-Type': 'application/vnd.api+json'\n    };\n    const keywordList = keywords.split(',').map(keyword => keyword.trim());\n    let allResults = [];\n    for (const keyword of keywordList) {\n      const payload = {\n        data: {\n          type: \"product_database_query\",\n          attributes: {\n            include_keywords: [keyword],\n            exclude_unavailable_products: true\n          }\n        }\n      };\n      try {\n        const response = await axios.post(url, payload, {\n          headers\n        });\n        console.log('API response received:', response);\n        if (response.data && response.data.data) {\n          const results = response.data.data.map(item => ({\n            asin: item.id.replace('us/', ''),\n            title: item.attributes.title,\n            brand: item.attributes.brand,\n            price: item.attributes.price.toFixed(2),\n            reviews: Math.round(item.attributes.reviews),\n            rating: item.attributes.rating.toFixed(2),\n            category: item.attributes.category,\n            sales: item.attributes.approximate_30_day_units_sold,\n            percentOfTotalSales: 0,\n            // Placeholder for now\n            revenue: item.attributes.approximate_30_day_revenue.toFixed(2),\n            percentOfTotalRevenue: 0,\n            // Placeholder for now\n            imageUrl: item.attributes.image_url,\n            sellerType: item.attributes.seller_type,\n            dateFirstAvailable: item.attributes.date_first_available\n          }));\n          allResults = [...allResults, ...results];\n        } else {\n          console.error('Invalid response format:', response);\n        }\n      } catch (error) {\n        console.error(\"API request failed:\", error.response ? error.response.data : error.message);\n        if (error.response) {\n          console.error(\"Error data:\", error.response.data);\n          console.error(\"Error status:\", error.response.status);\n          console.error(\"Error headers:\", error.response.headers);\n        }\n      }\n    }\n\n    // Remove duplicate ASINs\n    const uniqueResults = Array.from(new Set(allResults.map(item => item.asin))).map(asin => {\n      return allResults.find(item => item.asin === asin);\n    });\n\n    // Calculate total sales and revenue\n    const totalSales = uniqueResults.reduce((sum, item) => sum + item.sales, 0);\n    const totalRevenue = uniqueResults.reduce((sum, item) => sum + item.revenue, 0);\n\n    // Add percentage of total sales and revenue to each item\n    const processedResults = uniqueResults.map(item => ({\n      ...item,\n      percentOfTotalSales: (item.sales / totalSales * 100).toFixed(2) + '%',\n      percentOfTotalRevenue: (item.revenue / totalRevenue * 100).toFixed(2) + '%'\n    }));\n\n    // Sort the results by sales in descending order\n    processedResults.sort((a, b) => b.sales - a.sales);\n\n    // Calculate summary data\n    const averagePrice = (processedResults.reduce((sum, item) => sum + item.price, 0) / processedResults.length).toFixed(2);\n    const averageReviews = (processedResults.reduce((sum, item) => sum + item.reviews, 0) / processedResults.length).toFixed(0);\n    const summary = {\n      asin: \"Summary\",\n      title: \"Summary\",\n      brand: \"\",\n      price: averagePrice,\n      reviews: averageReviews,\n      rating: \"\",\n      category: \"\",\n      sales: totalSales,\n      percentOfTotalSales: \"100%\",\n      revenue: totalRevenue.toFixed(2),\n      percentOfTotalRevenue: \"100%\",\n      imageUrl: \"\",\n      sellerType: \"\",\n      dateFirstAvailable: \"\"\n    };\n    setSummaryData(summary);\n    setData([summary, ...processedResults]);\n    setLoading(false);\n  };\n  const getPriceSegments = () => {\n    const priceSegments = {};\n    data.slice(1).forEach(item => {\n      const priceSegment = `$${Math.floor(item.price / 5) * 5} - $${Math.floor(item.price / 5) * 5 + 4.99}`;\n      if (!priceSegments[priceSegment]) {\n        priceSegments[priceSegment] = {\n          sales: 0,\n          revenue: 0,\n          count: 0,\n          averagePrice: 0,\n          averageReviews: 0,\n          items: []\n        };\n      }\n      priceSegments[priceSegment].sales += item.sales;\n      priceSegments[priceSegment].revenue += item.revenue;\n      priceSegments[priceSegment].count += 1;\n      priceSegments[priceSegment].averagePrice += parseFloat(item.price);\n      priceSegments[priceSegment].averageReviews += item.reviews;\n      priceSegments[priceSegment].items.push(item);\n    });\n    const segmentData = Object.keys(priceSegments).map(segment => {\n      const segmentInfo = priceSegments[segment];\n      return {\n        asin: segment,\n        title: \"Summary\",\n        brand: \"\",\n        price: (segmentInfo.averagePrice / segmentInfo.count).toFixed(2),\n        reviews: (segmentInfo.averageReviews / segmentInfo.count).toFixed(0),\n        rating: \"\",\n        category: \"\",\n        sales: segmentInfo.sales,\n        percentOfTotalSales: (segmentInfo.sales / summaryData.sales * 100).toFixed(2) + '%',\n        revenue: segmentInfo.revenue.toFixed(2),\n        percentOfTotalRevenue: (segmentInfo.revenue / summaryData.revenue * 100).toFixed(2) + '%',\n        imageUrl: \"\",\n        sellerType: \"\",\n        dateFirstAvailable: \"\"\n      };\n    });\n    return [summaryData, ...segmentData];\n  };\n  const getWinners = () => {\n    const priceSegments = {};\n    data.slice(1).forEach(item => {\n      const priceSegment = `$${Math.floor(item.price / 5) * 5} - $${Math.floor(item.price / 5) * 5 + 4.99}`;\n      if (!priceSegments[priceSegment]) {\n        priceSegments[priceSegment] = item;\n      } else if (item.sales > priceSegments[priceSegment].sales) {\n        priceSegments[priceSegment] = item;\n      }\n    });\n    return [summaryData, ...Object.values(priceSegments)];\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        my: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Jungle Scout Product Explorer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Enter keywords separated by commas\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: keywords,\n            onChange: handleKeywordsChange,\n            style: {\n              marginRight: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleFetchData,\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 40\n            }, this) : 'Fetch Data'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: handleTabChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"All Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Price Segments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Winners\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ScatterPlot, {\n            data: data.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), activeTab === 1 && /*#__PURE__*/_jsxDEV(DataTable, {\n          data: getPriceSegments(),\n          priceSegments: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 41\n        }, this), activeTab === 2 && /*#__PURE__*/_jsxDEV(DataTable, {\n          data: getWinners()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n};\n_s(MainComponent, \"79EH5ZjcGn8f+RGgQQEPjs73XfE=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Container","Typography","Box","CircularProgress","Tabs","Tab","CssBaseline","ThemeProvider","createTheme","DataTable","ScatterPlot","jsxDEV","_jsxDEV","Fragment","_Fragment","darkTheme","palette","mode","MainComponent","_s","keywords","setKeywords","data","setData","summaryData","setSummaryData","loading","setLoading","activeTab","setActiveTab","handleKeywordsChange","event","target","value","console","log","handleTabChange","newValue","handleFetchData","apiKey","process","env","REACT_APP_JUNGLE_SCOUT_API_KEY","keyName","REACT_APP_JUNGLE_SCOUT_KEY_NAME","url","headers","keywordList","split","map","keyword","trim","allResults","payload","type","attributes","include_keywords","exclude_unavailable_products","response","post","results","item","asin","id","replace","title","brand","price","toFixed","reviews","Math","round","rating","category","sales","approximate_30_day_units_sold","percentOfTotalSales","revenue","approximate_30_day_revenue","percentOfTotalRevenue","imageUrl","image_url","sellerType","seller_type","dateFirstAvailable","date_first_available","error","message","status","uniqueResults","Array","from","Set","find","totalSales","reduce","sum","totalRevenue","processedResults","sort","a","b","averagePrice","length","averageReviews","summary","getPriceSegments","priceSegments","slice","forEach","priceSegment","floor","count","items","parseFloat","push","segmentData","Object","keys","segment","segmentInfo","getWinners","values","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","my","variant","component","gutterBottom","display","alignItems","mb","label","fullWidth","onChange","style","marginRight","color","onClick","disabled","size","_c","$RefreshReg$"],"sources":["/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box, CircularProgress, Tabs, Tab, CssBaseline } from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport DataTable from './DataTable';\nimport ScatterPlot from './ScatterPlot';\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n    },\n});\n\nconst MainComponent = () => {\n    const [keywords, setKeywords] = useState('');\n    const [data, setData] = useState([]);\n    const [summaryData, setSummaryData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [activeTab, setActiveTab] = useState(0);\n\n    const handleKeywordsChange = (event) => {\n        setKeywords(event.target.value);\n        console.log('Keywords changed:', event.target.value);\n    };\n\n    const handleTabChange = (event, newValue) => {\n        setActiveTab(newValue);\n    };\n\n    const handleFetchData = async () => {\n        setLoading(true);\n        setData([]);\n        console.log('Fetching data for keywords:', keywords);\n\n        const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n        const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n        const url = \"https://developer.junglescout.com/api/product_database_query?marketplace=us\";\n\n        const headers = {\n            'Authorization': `${keyName}:${apiKey}`,\n            'X-API-Type': 'junglescout',\n            'Accept': 'application/vnd.junglescout.v1+json',\n            'Content-Type': 'application/vnd.api+json',\n        };\n\n        const keywordList = keywords.split(',').map(keyword => keyword.trim());\n\n        let allResults = [];\n\n        for (const keyword of keywordList) {\n            const payload = {\n                data: {\n                    type: \"product_database_query\",\n                    attributes: {\n                        include_keywords: [keyword],\n                        exclude_unavailable_products: true\n                    }\n                }\n            };\n\n            try {\n                const response = await axios.post(url, payload, { headers });\n\n                console.log('API response received:', response);\n\n                if (response.data && response.data.data) {\n                    const results = response.data.data.map(item => ({\n                        asin: item.id.replace('us/', ''),\n                        title: item.attributes.title,\n                        brand: item.attributes.brand,\n                        price: item.attributes.price.toFixed(2),\n                        reviews: Math.round(item.attributes.reviews),\n                        rating: item.attributes.rating.toFixed(2),\n                        category: item.attributes.category,\n                        sales: item.attributes.approximate_30_day_units_sold,\n                        percentOfTotalSales: 0, // Placeholder for now\n                        revenue: item.attributes.approximate_30_day_revenue.toFixed(2),\n                        percentOfTotalRevenue: 0, // Placeholder for now\n                        imageUrl: item.attributes.image_url,\n                        sellerType: item.attributes.seller_type,\n                        dateFirstAvailable: item.attributes.date_first_available,\n                    }));\n\n                    allResults = [...allResults, ...results];\n                } else {\n                    console.error('Invalid response format:', response);\n                }\n            } catch (error) {\n                console.error(\"API request failed:\", error.response ? error.response.data : error.message);\n                if (error.response) {\n                    console.error(\"Error data:\", error.response.data);\n                    console.error(\"Error status:\", error.response.status);\n                    console.error(\"Error headers:\", error.response.headers);\n                }\n            }\n        }\n\n        // Remove duplicate ASINs\n        const uniqueResults = Array.from(new Set(allResults.map(item => item.asin)))\n            .map(asin => {\n                return allResults.find(item => item.asin === asin);\n            });\n\n        // Calculate total sales and revenue\n        const totalSales = uniqueResults.reduce((sum, item) => sum + item.sales, 0);\n        const totalRevenue = uniqueResults.reduce((sum, item) => sum + item.revenue, 0);\n\n        // Add percentage of total sales and revenue to each item\n        const processedResults = uniqueResults.map(item => ({\n            ...item,\n            percentOfTotalSales: ((item.sales / totalSales) * 100).toFixed(2) + '%',\n            percentOfTotalRevenue: ((item.revenue / totalRevenue) * 100).toFixed(2) + '%'\n        }));\n\n        // Sort the results by sales in descending order\n        processedResults.sort((a, b) => b.sales - a.sales);\n\n        // Calculate summary data\n        const averagePrice = (processedResults.reduce((sum, item) => sum + item.price, 0) / processedResults.length).toFixed(2);\n        const averageReviews = (processedResults.reduce((sum, item) => sum + item.reviews, 0) / processedResults.length).toFixed(0);\n\n        const summary = {\n            asin: \"Summary\",\n            title: \"Summary\",\n            brand: \"\",\n            price: averagePrice,\n            reviews: averageReviews,\n            rating: \"\",\n            category: \"\",\n            sales: totalSales,\n            percentOfTotalSales: \"100%\",\n            revenue: totalRevenue.toFixed(2),\n            percentOfTotalRevenue: \"100%\",\n            imageUrl: \"\",\n            sellerType: \"\",\n            dateFirstAvailable: \"\",\n        };\n\n        setSummaryData(summary);\n        setData([summary, ...processedResults]);\n        setLoading(false);\n    };\n\n    const getPriceSegments = () => {\n        const priceSegments = {};\n\n        data.slice(1).forEach((item) => {\n            const priceSegment = `$${Math.floor(item.price / 5) * 5} - $${Math.floor(item.price / 5) * 5 + 4.99}`;\n            if (!priceSegments[priceSegment]) {\n                priceSegments[priceSegment] = {\n                    sales: 0,\n                    revenue: 0,\n                    count: 0,\n                    averagePrice: 0,\n                    averageReviews: 0,\n                    items: []\n                };\n            }\n\n            priceSegments[priceSegment].sales += item.sales;\n            priceSegments[priceSegment].revenue += item.revenue;\n            priceSegments[priceSegment].count += 1;\n            priceSegments[priceSegment].averagePrice += parseFloat(item.price);\n            priceSegments[priceSegment].averageReviews += item.reviews;\n            priceSegments[priceSegment].items.push(item);\n        });\n\n        const segmentData = Object.keys(priceSegments).map(segment => {\n            const segmentInfo = priceSegments[segment];\n            return {\n                asin: segment,\n                title: \"Summary\",\n                brand: \"\",\n                price: (segmentInfo.averagePrice / segmentInfo.count).toFixed(2),\n                reviews: (segmentInfo.averageReviews / segmentInfo.count).toFixed(0),\n                rating: \"\",\n                category: \"\",\n                sales: segmentInfo.sales,\n                percentOfTotalSales: ((segmentInfo.sales / summaryData.sales) * 100).toFixed(2) + '%',\n                revenue: segmentInfo.revenue.toFixed(2),\n                percentOfTotalRevenue: ((segmentInfo.revenue / summaryData.revenue) * 100).toFixed(2) + '%',\n                imageUrl: \"\",\n                sellerType: \"\",\n                dateFirstAvailable: \"\",\n            };\n        });\n\n        return [summaryData, ...segmentData];\n    };\n\n    const getWinners = () => {\n        const priceSegments = {};\n\n        data.slice(1).forEach((item) => {\n            const priceSegment = `$${Math.floor(item.price / 5) * 5} - $${Math.floor(item.price / 5) * 5 + 4.99}`;\n            if (!priceSegments[priceSegment]) {\n                priceSegments[priceSegment] = item;\n            } else if (item.sales > priceSegments[priceSegment].sales) {\n                priceSegments[priceSegment] = item;\n            }\n        });\n\n        return [summaryData, ...Object.values(priceSegments)];\n    };\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <CssBaseline />\n            <Container>\n                <Box my={4}>\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                        Jungle Scout Product Explorer\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                        <TextField\n                            label=\"Enter keywords separated by commas\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={keywords}\n                            onChange={handleKeywordsChange}\n                            style={{ marginRight: 10 }}\n                        />\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleFetchData} disabled={loading}>\n                            {loading ? <CircularProgress size={24} /> : 'Fetch Data'}\n                        </Button>\n                    </Box>\n                    <Tabs value={activeTab} onChange={handleTabChange}>\n                        <Tab label=\"All Results\" />\n                        <Tab label=\"Price Segments\" />\n                        <Tab label=\"Winners\" />\n                    </Tabs>\n                    {activeTab === 0 && (\n                        <>\n                            <ScatterPlot data={data.slice(1)} />\n                            <DataTable data={data} />\n                        </>\n                    )}\n                    {activeTab === 1 && <DataTable data={getPriceSegments()} priceSegments />}\n                    {activeTab === 2 && <DataTable data={getWinners()} />}\n                </Box>\n            </Container>\n        </ThemeProvider>\n    );\n};\n\nexport default MainComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}