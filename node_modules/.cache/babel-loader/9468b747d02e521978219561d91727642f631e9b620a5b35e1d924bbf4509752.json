{"ast":null,"code":"var _jsxFileName = \"/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box } from '@mui/material';\nimport DataTable from './DataTable';\nimport { saveAs } from 'file-saver';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainComponent = () => {\n  _s();\n  const [keywords, setKeywords] = useState('');\n  const [mergedData, setMergedData] = useState([]);\n  const handleKeywordsChange = event => {\n    setKeywords(event.target.value);\n  };\n  const handleFetchData = async () => {\n    const keywordList = keywords.split(',').map(keyword => keyword.trim());\n    const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n    const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n    const url = \"https://developer.junglescout.com/api/product_database_query\";\n    const headers = {\n      'Authorization': `${keyName}:${apiKey}`,\n      'X-API-Type': 'junglescout',\n      'Accept': 'application/vnd.junglescout.v1+json',\n      'Content-Type': 'application/vnd.api+json'\n    };\n    const promises = keywordList.map(keyword => axios.post(url, {\n      data: {\n        attributes: {\n          keyword,\n          marketplace: 'us'\n        }\n      }\n    }, {\n      headers\n    }));\n    try {\n      const responses = await Promise.all(promises);\n      const results = responses.map(response => response.data);\n      const flattenedResults = results.flatMap(result => result.data.map(item => ({\n        price: item.attributes.price,\n        sales: item.attributes.approximate_30_day_units_sold\n      })));\n      setMergedData(flattenedResults);\n    } catch (error) {\n      console.error(\"API request failed\", error);\n    }\n  };\n  const saveToFile = () => {\n    const csvHeaders = Object.keys(mergedData[0]).join(',');\n    const csvRows = mergedData.map(row => Object.values(row).join(',')).join('\\n');\n    const csvData = `${csvHeaders}\\n${csvRows}`;\n    const blob = new Blob([csvData], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    saveAs(blob, 'merged_output.csv');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Jungle Scout Product Explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Enter keywords separated by commas\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: keywords,\n          onChange: handleKeywordsChange,\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleFetchData,\n          children: \"Fetch Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: saveToFile,\n        children: \"Save to CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        data: mergedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"price\",\n            name: \"Price\",\n            unit: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"sales\",\n            name: \"Sales\",\n            unit: \" units\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            cursor: {\n              strokeDasharray: '3 3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Products\",\n            data: mergedData,\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(MainComponent, \"9qkdFyzbcTiVSKtvTfUU/0d8uI4=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Container","Typography","Box","DataTable","saveAs","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","MainComponent","_s","keywords","setKeywords","mergedData","setMergedData","handleKeywordsChange","event","target","value","handleFetchData","keywordList","split","map","keyword","trim","apiKey","process","env","REACT_APP_JUNGLE_SCOUT_API_KEY","keyName","REACT_APP_JUNGLE_SCOUT_KEY_NAME","url","headers","promises","post","data","attributes","marketplace","responses","Promise","all","results","response","flattenedResults","flatMap","result","item","price","sales","approximate_30_day_units_sold","error","console","saveToFile","csvHeaders","Object","keys","join","csvRows","row","values","csvData","blob","Blob","type","children","my","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","mb","label","fullWidth","onChange","style","marginRight","color","onClick","width","height","margin","top","right","bottom","left","dataKey","name","unit","cursor","strokeDasharray","fill","_c","$RefreshReg$"],"sources":["/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box } from '@mui/material';\nimport DataTable from './DataTable';\nimport { saveAs } from 'file-saver';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst MainComponent = () => {\n    const [keywords, setKeywords] = useState('');\n    const [mergedData, setMergedData] = useState([]);\n\n    const handleKeywordsChange = (event) => {\n        setKeywords(event.target.value);\n    };\n\n    const handleFetchData = async () => {\n        const keywordList = keywords.split(',').map(keyword => keyword.trim());\n        const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n        const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n        const url = \"https://developer.junglescout.com/api/product_database_query\";\n\n        const headers = {\n            'Authorization': `${keyName}:${apiKey}`,\n            'X-API-Type': 'junglescout',\n            'Accept': 'application/vnd.junglescout.v1+json',\n            'Content-Type': 'application/vnd.api+json',\n        };\n\n        const promises = keywordList.map((keyword) =>\n            axios.post(url, {\n                data: { attributes: { keyword, marketplace: 'us' } },\n            }, { headers })\n        );\n\n        try {\n            const responses = await Promise.all(promises);\n            const results = responses.map((response) => response.data);\n            const flattenedResults = results.flatMap(result => result.data.map(item => ({\n                price: item.attributes.price,\n                sales: item.attributes.approximate_30_day_units_sold\n            })));\n            setMergedData(flattenedResults);\n        } catch (error) {\n            console.error(\"API request failed\", error);\n        }\n    };\n\n    const saveToFile = () => {\n        const csvHeaders = Object.keys(mergedData[0]).join(',');\n        const csvRows = mergedData.map(row => Object.values(row).join(',')).join('\\n');\n        const csvData = `${csvHeaders}\\n${csvRows}`;\n        const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n        saveAs(blob, 'merged_output.csv');\n    };\n\n    return (\n        <Container>\n            <Box my={4}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Jungle Scout Product Explorer\n                </Typography>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                    <TextField\n                        label=\"Enter keywords separated by commas\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={keywords}\n                        onChange={handleKeywordsChange}\n                        style={{ marginRight: 10 }}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleFetchData}>\n                        Fetch Data\n                    </Button>\n                </Box>\n                <Button variant=\"contained\" color=\"secondary\" onClick={saveToFile}>\n                    Save to CSV\n                </Button>\n                <DataTable data={mergedData} />\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <ScatterChart\n                        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n                    >\n                        <CartesianGrid />\n                        <XAxis type=\"number\" dataKey=\"price\" name=\"Price\" unit=\"$\" />\n                        <YAxis type=\"number\" dataKey=\"sales\" name=\"Sales\" unit=\" units\" />\n                        <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n                        <Scatter name=\"Products\" data={mergedData} fill=\"#8884d8\" />\n                    </ScatterChart>\n                </ResponsiveContainer>\n            </Box>\n        </Container>\n    );\n};\n\nexport default MainComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}