{"ast":null,"code":"var _jsxFileName = \"/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box, CircularProgress, Tabs, Tab } from '@mui/material';\nimport DataTable from './DataTable';\nimport ScatterPlot from './ScatterPlot';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainComponent = () => {\n  _s();\n  const [keywords, setKeywords] = useState('');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const handleKeywordsChange = event => {\n    setKeywords(event.target.value);\n    console.log('Keywords changed:', event.target.value);\n  };\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const handleFetchData = async () => {\n    setLoading(true);\n    setData([]);\n    console.log('Fetching data for keywords:', keywords);\n    const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n    const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n    const url = \"https://developer.junglescout.com/api/product_database_query?marketplace=us\";\n    const headers = {\n      'Authorization': `${keyName}:${apiKey}`,\n      'X-API-Type': 'junglescout',\n      'Accept': 'application/vnd.junglescout.v1+json',\n      'Content-Type': 'application/vnd.api+json'\n    };\n    const keywordList = keywords.split(',').map(keyword => keyword.trim());\n    let allResults = [];\n    for (const keyword of keywordList) {\n      const payload = {\n        data: {\n          type: \"product_database_query\",\n          attributes: {\n            include_keywords: [keyword],\n            exclude_unavailable_products: true\n          }\n        }\n      };\n      try {\n        const response = await axios.post(url, payload, {\n          headers\n        });\n        console.log('API response received:', response);\n        if (response.data && response.data.data) {\n          const results = response.data.data.map(item => ({\n            asin: item.id.replace('us/', ''),\n            title: item.attributes.title,\n            brand: item.attributes.brand,\n            price: item.attributes.price,\n            reviews: Math.round(item.attributes.reviews),\n            rating: item.attributes.rating,\n            category: item.attributes.category,\n            sales: item.attributes.approximate_30_day_units_sold,\n            percentOfTotalSales: 0,\n            // Placeholder for now\n            revenue: item.attributes.approximate_30_day_revenue,\n            percentOfTotalRevenue: 0,\n            // Placeholder for now\n            imageUrl: item.attributes.image_url,\n            sellerType: item.attributes.seller_type,\n            dateFirstAvailable: item.attributes.date_first_available\n          }));\n          allResults = [...allResults, ...results];\n        } else {\n          console.error('Invalid response format:', response);\n        }\n      } catch (error) {\n        console.error(\"API request failed:\", error.response ? error.response.data : error.message);\n        if (error.response) {\n          console.error(\"Error data:\", error.response.data);\n          console.error(\"Error status:\", error.response.status);\n          console.error(\"Error headers:\", error.response.headers);\n        }\n      }\n    }\n\n    // Remove duplicate ASINs\n    const uniqueResults = Array.from(new Set(allResults.map(item => item.asin))).map(asin => {\n      return allResults.find(item => item.asin === asin);\n    });\n\n    // Calculate total sales and revenue\n    const totalSales = uniqueResults.reduce((sum, item) => sum + item.sales, 0);\n    const totalRevenue = uniqueResults.reduce((sum, item) => sum + item.revenue, 0);\n\n    // Add percentage of total sales and revenue to each item\n    const processedResults = uniqueResults.map(item => ({\n      ...item,\n      percentOfTotalSales: (item.sales / totalSales * 100).toFixed(2) + '%',\n      percentOfTotalRevenue: (item.revenue / totalRevenue * 100).toFixed(2) + '%'\n    }));\n\n    // Sort the results by sales in descending order\n    processedResults.sort((a, b) => b.sales - a.sales);\n\n    // Calculate summary data\n    const averagePrice = (processedResults.reduce((sum, item) => sum + item.price, 0) / processedResults.length).toFixed(2);\n    const averageReviews = (processedResults.reduce((sum, item) => sum + item.reviews, 0) / processedResults.length).toFixed(0);\n    const summaryData = {\n      asin: \"Summary\",\n      title: \"Summary\",\n      brand: \"\",\n      price: averagePrice,\n      reviews: averageReviews,\n      rating: \"\",\n      category: \"\",\n      sales: totalSales,\n      percentOfTotalSales: \"100%\",\n      revenue: totalRevenue,\n      percentOfTotalRevenue: \"100%\",\n      imageUrl: \"\",\n      sellerType: \"\",\n      dateFirstAvailable: \"\"\n    };\n    setData([summaryData, ...processedResults]);\n    setLoading(false);\n  };\n  const getPriceSegments = () => {\n    const priceSegments = {};\n    data.forEach((item, index) => {\n      if (index === 0) return; // Skip summary row\n\n      const priceSegment = `$${Math.floor(item.price / 5) * 5} - $${Math.floor(item.price / 5) * 5 + 4.99}`;\n      if (!priceSegments[priceSegment]) {\n        priceSegments[priceSegment] = {\n          sales: 0,\n          revenue: 0,\n          count: 0,\n          averagePrice: 0,\n          averageReviews: 0,\n          items: []\n        };\n      }\n      priceSegments[priceSegment].sales += item.sales;\n      priceSegments[priceSegment].revenue += item.revenue;\n      priceSegments[priceSegment].count += 1;\n      priceSegments[priceSegment].averagePrice += item.price;\n      priceSegments[priceSegment].averageReviews += item.reviews;\n      priceSegments[priceSegment].items.push(item);\n    });\n    const totalSales = data.reduce((sum, item) => sum + item.sales, 0);\n    const totalRevenue = data.reduce((sum, item) => sum + item.revenue, 0);\n    const segmentData = Object.keys(priceSegments).map(segment => {\n      const segmentInfo = priceSegments[segment];\n      return {\n        asin: segment,\n        title: \"Summary\",\n        brand: \"\",\n        price: (segmentInfo.averagePrice / segmentInfo.count).toFixed(2),\n        reviews: (segmentInfo.averageReviews / segmentInfo.count).toFixed(0),\n        rating: \"\",\n        category: \"\",\n        sales: segmentInfo.sales,\n        percentOfTotalSales: (segmentInfo.sales / totalSales * 100).toFixed(2) + '%',\n        revenue: segmentInfo.revenue,\n        percentOfTotalRevenue: (segmentInfo.revenue / totalRevenue * 100).toFixed(2) + '%',\n        imageUrl: \"\",\n        sellerType: \"\",\n        dateFirstAvailable: \"\"\n      };\n    });\n    const summaryData = {\n      asin: \"Summary\",\n      title: \"Summary\",\n      brand: \"\",\n      price: \"\",\n      reviews: \"\",\n      rating: \"\",\n      category: \"\",\n      sales: totalSales,\n      percentOfTotalSales: \"100%\",\n      revenue: totalRevenue,\n      percentOfTotalRevenue: \"100%\",\n      imageUrl: \"\",\n      sellerType: \"\",\n      dateFirstAvailable: \"\"\n    };\n    return [summaryData, ...segmentData];\n  };\n  const getWinners = () => {\n    const priceSegments = {};\n    data.forEach((item, index) => {\n      if (index === 0) return; // Skip summary row\n\n      const priceSegment = `$${Math.floor(item.price / 5) * 5} - $${Math.floor(item.price / 5) * 5 + 4.99}`;\n      if (!priceSegments[priceSegment]) {\n        priceSegments[priceSegment] = item;\n      } else if (item.sales > priceSegments[priceSegment].sales) {\n        priceSegments[priceSegment] = item;\n      }\n    });\n    const totalSales = data.reduce((sum, item) => sum + item.sales, 0);\n    const totalRevenue = data.reduce((sum, item) => sum + item.revenue, 0);\n    const summaryData = {\n      asin: \"Summary\",\n      title: \"Summary\",\n      brand: \"\",\n      price: \"\",\n      reviews: \"\",\n      rating: \"\",\n      category: \"\",\n      sales: totalSales,\n      percentOfTotalSales: \"100%\",\n      revenue: totalRevenue,\n      percentOfTotalRevenue: \"100%\",\n      imageUrl: \"\",\n      sellerType: \"\",\n      dateFirstAvailable: \"\"\n    };\n    return [summaryData, ...Object.values(priceSegments)];\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Jungle Scout Product Explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Enter keywords separated by commas\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: keywords,\n          onChange: handleKeywordsChange,\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleFetchData,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 36\n          }, this) : 'Fetch Data'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: handleTabChange,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"All Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Price Segments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Winners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ScatterPlot, {\n          data: data.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), activeTab === 1 && /*#__PURE__*/_jsxDEV(DataTable, {\n        data: getPriceSegments()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 37\n      }, this), activeTab === 2 && /*#__PURE__*/_jsxDEV(DataTable, {\n        data: getWinners()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n};\n_s(MainComponent, \"CWD09sIfKVd+GbdavZsc/k/6APc=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Container","Typography","Box","CircularProgress","Tabs","Tab","DataTable","ScatterPlot","jsxDEV","_jsxDEV","Fragment","_Fragment","MainComponent","_s","keywords","setKeywords","data","setData","loading","setLoading","activeTab","setActiveTab","handleKeywordsChange","event","target","value","console","log","handleTabChange","newValue","handleFetchData","apiKey","process","env","REACT_APP_JUNGLE_SCOUT_API_KEY","keyName","REACT_APP_JUNGLE_SCOUT_KEY_NAME","url","headers","keywordList","split","map","keyword","trim","allResults","payload","type","attributes","include_keywords","exclude_unavailable_products","response","post","results","item","asin","id","replace","title","brand","price","reviews","Math","round","rating","category","sales","approximate_30_day_units_sold","percentOfTotalSales","revenue","approximate_30_day_revenue","percentOfTotalRevenue","imageUrl","image_url","sellerType","seller_type","dateFirstAvailable","date_first_available","error","message","status","uniqueResults","Array","from","Set","find","totalSales","reduce","sum","totalRevenue","processedResults","toFixed","sort","a","b","averagePrice","length","averageReviews","summaryData","getPriceSegments","priceSegments","forEach","index","priceSegment","floor","count","items","push","segmentData","Object","keys","segment","segmentInfo","getWinners","values","children","my","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","mb","label","fullWidth","onChange","style","marginRight","color","onClick","disabled","size","slice","_c","$RefreshReg$"],"sources":["/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box, CircularProgress, Tabs, Tab } from '@mui/material';\nimport DataTable from './DataTable';\nimport ScatterPlot from './ScatterPlot';\n\nconst MainComponent = () => {\n    const [keywords, setKeywords] = useState('');\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [activeTab, setActiveTab] = useState(0);\n\n    const handleKeywordsChange = (event) => {\n        setKeywords(event.target.value);\n        console.log('Keywords changed:', event.target.value);\n    };\n\n    const handleTabChange = (event, newValue) => {\n        setActiveTab(newValue);\n    };\n\n    const handleFetchData = async () => {\n        setLoading(true);\n        setData([]);\n        console.log('Fetching data for keywords:', keywords);\n\n        const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n        const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n        const url = \"https://developer.junglescout.com/api/product_database_query?marketplace=us\";\n\n        const headers = {\n            'Authorization': `${keyName}:${apiKey}`,\n            'X-API-Type': 'junglescout',\n            'Accept': 'application/vnd.junglescout.v1+json',\n            'Content-Type': 'application/vnd.api+json',\n        };\n\n        const keywordList = keywords.split(',').map(keyword => keyword.trim());\n\n        let allResults = [];\n\n        for (const keyword of keywordList) {\n            const payload = {\n                data: {\n                    type: \"product_database_query\",\n                    attributes: {\n                        include_keywords: [keyword],\n                        exclude_unavailable_products: true\n                    }\n                }\n            };\n\n            try {\n                const response = await axios.post(url, payload, { headers });\n\n                console.log('API response received:', response);\n\n                if (response.data && response.data.data) {\n                    const results = response.data.data.map(item => ({\n                        asin: item.id.replace('us/', ''),\n                        title: item.attributes.title,\n                        brand: item.attributes.brand,\n                        price: item.attributes.price,\n                        reviews: Math.round(item.attributes.reviews),\n                        rating: item.attributes.rating,\n                        category: item.attributes.category,\n                        sales: item.attributes.approximate_30_day_units_sold,\n                        percentOfTotalSales: 0, // Placeholder for now\n                        revenue: item.attributes.approximate_30_day_revenue,\n                        percentOfTotalRevenue: 0, // Placeholder for now\n                        imageUrl: item.attributes.image_url,\n                        sellerType: item.attributes.seller_type,\n                        dateFirstAvailable: item.attributes.date_first_available,\n                    }));\n\n                    allResults = [...allResults, ...results];\n                } else {\n                    console.error('Invalid response format:', response);\n                }\n            } catch (error) {\n                console.error(\"API request failed:\", error.response ? error.response.data : error.message);\n                if (error.response) {\n                    console.error(\"Error data:\", error.response.data);\n                    console.error(\"Error status:\", error.response.status);\n                    console.error(\"Error headers:\", error.response.headers);\n                }\n            }\n        }\n\n        // Remove duplicate ASINs\n        const uniqueResults = Array.from(new Set(allResults.map(item => item.asin)))\n            .map(asin => {\n                return allResults.find(item => item.asin === asin);\n            });\n\n        // Calculate total sales and revenue\n        const totalSales = uniqueResults.reduce((sum, item) => sum + item.sales, 0);\n        const totalRevenue = uniqueResults.reduce((sum, item) => sum + item.revenue, 0);\n\n        // Add percentage of total sales and revenue to each item\n        const processedResults = uniqueResults.map(item => ({\n            ...item,\n            percentOfTotalSales: ((item.sales / totalSales) * 100).toFixed(2) + '%',\n            percentOfTotalRevenue: ((item.revenue / totalRevenue) * 100).toFixed(2) + '%'\n        }));\n\n        // Sort the results by sales in descending order\n        processedResults.sort((a, b) => b.sales - a.sales);\n\n        // Calculate summary data\n        const averagePrice = (processedResults.reduce((sum, item) => sum + item.price, 0) / processedResults.length).toFixed(2);\n        const averageReviews = (processedResults.reduce((sum, item) => sum + item.reviews, 0) / processedResults.length).toFixed(0);\n\n        const summaryData = {\n            asin: \"Summary\",\n            title: \"Summary\",\n            brand: \"\",\n            price: averagePrice,\n            reviews: averageReviews,\n            rating: \"\",\n            category: \"\",\n            sales: totalSales,\n            percentOfTotalSales: \"100%\",\n            revenue: totalRevenue,\n            percentOfTotalRevenue: \"100%\",\n            imageUrl: \"\",\n            sellerType: \"\",\n            dateFirstAvailable: \"\",\n        };\n\n        setData([summaryData, ...processedResults]);\n        setLoading(false);\n    };\n\n    const getPriceSegments = () => {\n        const priceSegments = {};\n\n        data.forEach((item, index) => {\n            if (index === 0) return; // Skip summary row\n\n            const priceSegment = `$${Math.floor(item.price / 5) * 5} - $${Math.floor(item.price / 5) * 5 + 4.99}`;\n            if (!priceSegments[priceSegment]) {\n                priceSegments[priceSegment] = {\n                    sales: 0,\n                    revenue: 0,\n                    count: 0,\n                    averagePrice: 0,\n                    averageReviews: 0,\n                    items: []\n                };\n            }\n\n            priceSegments[priceSegment].sales += item.sales;\n            priceSegments[priceSegment].revenue += item.revenue;\n            priceSegments[priceSegment].count += 1;\n            priceSegments[priceSegment].averagePrice += item.price;\n            priceSegments[priceSegment].averageReviews += item.reviews;\n            priceSegments[priceSegment].items.push(item);\n        });\n\n        const totalSales = data.reduce((sum, item) => sum + item.sales, 0);\n        const totalRevenue = data.reduce((sum, item) => sum + item.revenue, 0);\n\n        const segmentData = Object.keys(priceSegments).map(segment => {\n            const segmentInfo = priceSegments[segment];\n            return {\n                asin: segment,\n                title: \"Summary\",\n                brand: \"\",\n                price: (segmentInfo.averagePrice / segmentInfo.count).toFixed(2),\n                reviews: (segmentInfo.averageReviews / segmentInfo.count).toFixed(0),\n                rating: \"\",\n                category: \"\",\n                sales: segmentInfo.sales,\n                percentOfTotalSales: ((segmentInfo.sales / totalSales) * 100).toFixed(2) + '%',\n                revenue: segmentInfo.revenue,\n                percentOfTotalRevenue: ((segmentInfo.revenue / totalRevenue) * 100).toFixed(2) + '%',\n                imageUrl: \"\",\n                sellerType: \"\",\n                dateFirstAvailable: \"\",\n            };\n        });\n\n        const summaryData = {\n            asin: \"Summary\",\n            title: \"Summary\",\n            brand: \"\",\n            price: \"\",\n            reviews: \"\",\n            rating: \"\",\n            category: \"\",\n            sales: totalSales,\n            percentOfTotalSales: \"100%\",\n            revenue: totalRevenue,\n            percentOfTotalRevenue: \"100%\",\n            imageUrl: \"\",\n            sellerType: \"\",\n            dateFirstAvailable: \"\",\n        };\n\n        return [summaryData, ...segmentData];\n    };\n\n    const getWinners = () => {\n        const priceSegments = {};\n\n        data.forEach((item, index) => {\n            if (index === 0) return; // Skip summary row\n\n            const priceSegment = `$${Math.floor(item.price / 5) * 5} - $${Math.floor(item.price / 5) * 5 + 4.99}`;\n            if (!priceSegments[priceSegment]) {\n                priceSegments[priceSegment] = item;\n            } else if (item.sales > priceSegments[priceSegment].sales) {\n                priceSegments[priceSegment] = item;\n            }\n        });\n\n        const totalSales = data.reduce((sum, item) => sum + item.sales, 0);\n        const totalRevenue = data.reduce((sum, item) => sum + item.revenue, 0);\n\n        const summaryData = {\n            asin: \"Summary\",\n            title: \"Summary\",\n            brand: \"\",\n            price: \"\",\n            reviews: \"\",\n            rating: \"\",\n            category: \"\",\n            sales: totalSales,\n            percentOfTotalSales: \"100%\",\n            revenue: totalRevenue,\n            percentOfTotalRevenue: \"100%\",\n            imageUrl: \"\",\n            sellerType: \"\",\n            dateFirstAvailable: \"\",\n        };\n\n        return [summaryData, ...Object.values(priceSegments)];\n    };\n\n    return (\n        <Container>\n            <Box my={4}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Jungle Scout Product Explorer\n                </Typography>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                    <TextField\n                        label=\"Enter keywords separated by commas\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={keywords}\n                        onChange={handleKeywordsChange}\n                        style={{ marginRight: 10 }}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleFetchData} disabled={loading}>\n                        {loading ? <CircularProgress size={24} /> : 'Fetch Data'}\n                    </Button>\n                </Box>\n                <Tabs value={activeTab} onChange={handleTabChange}>\n                    <Tab label=\"All Results\" />\n                    <Tab label=\"Price Segments\" />\n                    <Tab label=\"Winners\" />\n                </Tabs>\n                {activeTab === 0 && (\n                    <>\n                        <ScatterPlot data={data.slice(1)} />\n                        <DataTable data={data} />\n                    </>\n                )}\n                {activeTab === 1 && <DataTable data={getPriceSegments()} />}\n                {activeTab === 2 && <DataTable data={getWinners()} />}\n            </Box>\n        </Container>\n    );\n};\n\nexport default MainComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}