{"ast":null,"code":"var _jsxFileName = \"/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Tabs, Tab, Container, Paper, TableContainer, TextField, Button } from '@material-ui/core';\nimport ScatterPlot from './components/ScatterPlot';\nimport DataTable from './components/DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: theme.palette.background.default\n  },\n  appBar: {\n    marginBottom: theme.spacing(2)\n  },\n  searchContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2)\n  },\n  searchField: {\n    flexGrow: 1,\n    marginRight: theme.spacing(2)\n  },\n  tableContainer: {\n    maxHeight: '60vh'\n  }\n}));\nconst MainComponent = () => {\n  _s();\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [keyword, setKeyword] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  const [resultCount, setResultCount] = useState(0);\n  useEffect(() => {\n    if (keyword) {\n      fetchData(keyword);\n    }\n  }, [keyword]);\n  const fetchData = async keyword => {\n    try {\n      const apiKey = 'your_api_key';\n      const keyName = 'your_key_name';\n      const headers = {\n        'Authorization': `${keyName}:${apiKey}`,\n        'X-API-Type': 'junglescout',\n        'Accept': 'application/vnd.junglescout.v1+json',\n        'Content-Type': 'application/vnd.api+json'\n      };\n      const response = await axios.post('https://developer.junglescout.com/api/product_database_query?marketplace=us&sort=-revenue&page[size]=50', {\n        data: {\n          type: 'product_database_query',\n          attributes: {\n            include_keywords: [keyword],\n            exclude_unavailable_products: true\n          }\n        }\n      }, {\n        headers\n      });\n      if (response.data && response.data.data) {\n        const results = response.data.data;\n        setResultCount(results.length);\n        setData(results);\n        setFilteredData(results);\n      }\n    } catch (error) {\n      console.error('API request failed:', error);\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabIndex(newValue);\n    switch (newValue) {\n      case 1:\n        // Price Segments\n        handlePriceSegments();\n        break;\n      case 2:\n        // Winners\n        handleWinners();\n        break;\n      case 3:\n        // Brand\n        handleBrandBreakdown();\n        break;\n      default:\n        setFilteredData(data);\n    }\n  };\n  const handlePriceSegments = () => {\n    const priceSegments = {};\n    data.forEach(item => {\n      const price = item.attributes.price;\n      const lowerBound = Math.floor(price / 5) * 5;\n      const upperBound = lowerBound + 4.99;\n      const segment = `$${lowerBound.toFixed(2)}-$${upperBound.toFixed(2)}`;\n      if (!priceSegments[segment]) {\n        priceSegments[segment] = {\n          priceRange: segment,\n          sales: 0,\n          revenue: 0,\n          items: []\n        };\n      }\n      priceSegments[segment].sales += item.attributes.approximate_30_day_units_sold;\n      priceSegments[segment].revenue += item.attributes.approximate_30_day_revenue;\n      priceSegments[segment].items.push(item);\n    });\n    const segmentsArray = Object.values(priceSegments).filter(segment => segment.sales > 0);\n    segmentsArray.sort((a, b) => parseFloat(a.priceRange.split('-')[0].replace('$', '')) - parseFloat(b.priceRange.split('-')[0].replace('$', '')));\n    setFilteredData(segmentsArray);\n  };\n  const handleWinners = () => {\n    const priceSegments = {};\n    data.forEach(item => {\n      const price = item.attributes.price;\n      const lowerBound = Math.floor(price / 5) * 5;\n      const upperBound = lowerBound + 4.99;\n      const segment = `$${lowerBound.toFixed(2)}-$${upperBound.toFixed(2)}`;\n      if (!priceSegments[segment] || priceSegments[segment].revenue < item.attributes.approximate_30_day_revenue) {\n        priceSegments[segment] = {\n          ...item,\n          priceRange: segment\n        };\n      }\n    });\n    const winnersArray = Object.values(priceSegments);\n    winnersArray.sort((a, b) => parseFloat(a.priceRange.split('-')[0].replace('$', '')) - parseFloat(b.priceRange.split('-')[0].replace('$', '')));\n    setFilteredData(winnersArray);\n  };\n  const handleBrandBreakdown = () => {\n    const brandData = {};\n    data.forEach(item => {\n      const brand = item.attributes.brand;\n      if (!brandData[brand]) {\n        brandData[brand] = {\n          brand: brand,\n          sales: 0\n        };\n      }\n      brandData[brand].sales += item.attributes.approximate_30_day_units_sold;\n    });\n    const totalSales = Object.values(brandData).reduce((sum, brand) => sum + brand.sales, 0);\n    const brandArray = Object.values(brandData).map(brand => ({\n      ...brand,\n      salesPercentage: (brand.sales / totalSales * 100).toFixed(2)\n    }));\n    setFilteredData(brandArray);\n  };\n  const handleSearch = () => {\n    fetchData(keyword);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appBar,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabIndex,\n        onChange: handleTabChange,\n        \"aria-label\": \"simple tabs example\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"All Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Price Segments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Winners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDarkMode,\n        children: \"Toggle Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.searchContainer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.searchField,\n          label: \"Keyword\",\n          variant: \"outlined\",\n          value: keyword,\n          onChange: e => setKeyword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of Results: \", resultCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          data: filteredData,\n          tabIndex: tabIndex,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n};\n_s(MainComponent, \"b9XfuysJ/ssnGcHbCsKmeWaRJ9g=\", false, function () {\n  return [useStyles];\n});\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","makeStyles","AppBar","Tabs","Tab","Container","Paper","TableContainer","TextField","Button","ScatterPlot","DataTable","jsxDEV","_jsxDEV","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","table","minWidth","default","appBar","marginBottom","spacing","searchContainer","display","justifyContent","alignItems","searchField","marginRight","tableContainer","maxHeight","MainComponent","_s","classes","data","setData","filteredData","setFilteredData","tabIndex","setTabIndex","keyword","setKeyword","darkMode","setDarkMode","resultCount","setResultCount","fetchData","apiKey","keyName","headers","response","post","type","attributes","include_keywords","exclude_unavailable_products","results","length","error","console","handleTabChange","event","newValue","handlePriceSegments","handleWinners","handleBrandBreakdown","priceSegments","forEach","item","price","lowerBound","Math","floor","upperBound","segment","toFixed","priceRange","sales","revenue","items","approximate_30_day_units_sold","approximate_30_day_revenue","push","segmentsArray","Object","values","filter","sort","a","b","parseFloat","split","replace","winnersArray","brandData","brand","totalSales","reduce","sum","brandArray","map","salesPercentage","handleSearch","toggleDarkMode","className","children","position","value","onChange","label","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","e","target","color","component","_c","$RefreshReg$"],"sources":["/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Tabs, Tab, Container, Paper, TableContainer, TextField, Button } from '@material-ui/core';\nimport ScatterPlot from './components/ScatterPlot';\nimport DataTable from './components/DataTable';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    table: {\n        minWidth: 650,\n        backgroundColor: theme.palette.background.default,\n    },\n    appBar: {\n        marginBottom: theme.spacing(2),\n    },\n    searchContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    searchField: {\n        flexGrow: 1,\n        marginRight: theme.spacing(2),\n    },\n    tableContainer: {\n        maxHeight: '60vh',\n    },\n}));\n\nconst MainComponent = () => {\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [tabIndex, setTabIndex] = useState(0);\n    const [keyword, setKeyword] = useState('');\n    const [darkMode, setDarkMode] = useState(false);\n    const [resultCount, setResultCount] = useState(0);\n\n    useEffect(() => {\n        if (keyword) {\n            fetchData(keyword);\n        }\n    }, [keyword]);\n\n    const fetchData = async (keyword) => {\n        try {\n            const apiKey = 'your_api_key';\n            const keyName = 'your_key_name';\n            const headers = {\n                'Authorization': `${keyName}:${apiKey}`,\n                'X-API-Type': 'junglescout',\n                'Accept': 'application/vnd.junglescout.v1+json',\n                'Content-Type': 'application/vnd.api+json'\n            };\n\n            const response = await axios.post(\n                'https://developer.junglescout.com/api/product_database_query?marketplace=us&sort=-revenue&page[size]=50',\n                {\n                    data: {\n                        type: 'product_database_query',\n                        attributes: {\n                            include_keywords: [keyword],\n                            exclude_unavailable_products: true\n                        }\n                    }\n                },\n                { headers }\n            );\n\n            if (response.data && response.data.data) {\n                const results = response.data.data;\n                setResultCount(results.length);\n                setData(results);\n                setFilteredData(results);\n            }\n        } catch (error) {\n            console.error('API request failed:', error);\n        }\n    };\n\n    const handleTabChange = (event, newValue) => {\n        setTabIndex(newValue);\n        switch (newValue) {\n            case 1: // Price Segments\n                handlePriceSegments();\n                break;\n            case 2: // Winners\n                handleWinners();\n                break;\n            case 3: // Brand\n                handleBrandBreakdown();\n                break;\n            default:\n                setFilteredData(data);\n        }\n    };\n\n    const handlePriceSegments = () => {\n        const priceSegments = {};\n        data.forEach(item => {\n            const price = item.attributes.price;\n            const lowerBound = Math.floor(price / 5) * 5;\n            const upperBound = lowerBound + 4.99;\n            const segment = `$${lowerBound.toFixed(2)}-$${upperBound.toFixed(2)}`;\n            if (!priceSegments[segment]) {\n                priceSegments[segment] = {\n                    priceRange: segment,\n                    sales: 0,\n                    revenue: 0,\n                    items: []\n                };\n            }\n            priceSegments[segment].sales += item.attributes.approximate_30_day_units_sold;\n            priceSegments[segment].revenue += item.attributes.approximate_30_day_revenue;\n            priceSegments[segment].items.push(item);\n        });\n\n        const segmentsArray = Object.values(priceSegments).filter(segment => segment.sales > 0);\n        segmentsArray.sort((a, b) => parseFloat(a.priceRange.split('-')[0].replace('$', '')) - parseFloat(b.priceRange.split('-')[0].replace('$', '')));\n        setFilteredData(segmentsArray);\n    };\n\n    const handleWinners = () => {\n        const priceSegments = {};\n        data.forEach(item => {\n            const price = item.attributes.price;\n            const lowerBound = Math.floor(price / 5) * 5;\n            const upperBound = lowerBound + 4.99;\n            const segment = `$${lowerBound.toFixed(2)}-$${upperBound.toFixed(2)}`;\n            if (!priceSegments[segment] || (priceSegments[segment].revenue < item.attributes.approximate_30_day_revenue)) {\n                priceSegments[segment] = {\n                    ...item,\n                    priceRange: segment\n                };\n            }\n        });\n\n        const winnersArray = Object.values(priceSegments);\n        winnersArray.sort((a, b) => parseFloat(a.priceRange.split('-')[0].replace('$', '')) - parseFloat(b.priceRange.split('-')[0].replace('$', '')));\n        setFilteredData(winnersArray);\n    };\n\n    const handleBrandBreakdown = () => {\n        const brandData = {};\n        data.forEach(item => {\n            const brand = item.attributes.brand;\n            if (!brandData[brand]) {\n                brandData[brand] = {\n                    brand: brand,\n                    sales: 0\n                };\n            }\n            brandData[brand].sales += item.attributes.approximate_30_day_units_sold;\n        });\n\n        const totalSales = Object.values(brandData).reduce((sum, brand) => sum + brand.sales, 0);\n        const brandArray = Object.values(brandData).map(brand => ({\n            ...brand,\n            salesPercentage: ((brand.sales / totalSales) * 100).toFixed(2)\n        }));\n\n        setFilteredData(brandArray);\n    };\n\n    const handleSearch = () => {\n        fetchData(keyword);\n    };\n\n    const toggleDarkMode = () => {\n        setDarkMode(!darkMode);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Tabs value={tabIndex} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"All Results\" />\n                    <Tab label=\"Price Segments\" />\n                    <Tab label=\"Winners\" />\n                    <Tab label=\"Brand\" />\n                </Tabs>\n                <Button onClick={toggleDarkMode}>Toggle Dark Mode</Button>\n            </AppBar>\n            <Container>\n                <div className={classes.searchContainer}>\n                    <TextField\n                        className={classes.searchField}\n                        label=\"Keyword\"\n                        variant=\"outlined\"\n                        value={keyword}\n                        onChange={(e) => setKeyword(e.target.value)}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\n                        Search\n                    </Button>\n                </div>\n                <p>Number of Results: {resultCount}</p>\n                <ScatterPlot data={filteredData} />\n                <TableContainer component={Paper} className={classes.tableContainer}>\n                    <DataTable data={filteredData} tabIndex={tabIndex} darkMode={darkMode} />\n                </TableContainer>\n            </Container>\n        </div>\n    );\n};\n\nexport default MainComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}