{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{TextField,Button,Container,Typography,Box,CircularProgress,Tabs,Tab,CssBaseline,IconButton}from'@mui/material';import{ThemeProvider,createTheme}from'@mui/material/styles';import DataTable from'./components/DataTable';import ScatterPlot from'./components/ScatterPlot';import Brightness4Icon from'@mui/icons-material/Brightness4';import Brightness7Icon from'@mui/icons-material/Brightness7';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MainComponent=()=>{const[keywords,setKeywords]=useState('');const[data,setData]=useState([]);const[summaryData,setSummaryData]=useState(null);const[loading,setLoading]=useState(false);const[activeTab,setActiveTab]=useState(0);const[darkMode,setDarkMode]=useState(false);useEffect(()=>{console.log(\"Data updated:\",data);},[data]);const handleKeywordsChange=event=>{setKeywords(event.target.value);console.log('Keywords changed:',event.target.value);};const handleTabChange=(event,newValue)=>{setActiveTab(newValue);};const handleFetchData=async()=>{setLoading(true);setData([]);console.log('Fetching data for keywords:',keywords);const apiKey=process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;const keyName=process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;const url=\"https://developer.junglescout.com/api/product_database_query?marketplace=us\";const headers={'Authorization':\"\".concat(keyName,\":\").concat(apiKey),'X-API-Type':'junglescout','Accept':'application/vnd.junglescout.v1+json','Content-Type':'application/vnd.api+json'};const keywordList=keywords.split(',').map(keyword=>keyword.trim());let allResults=[];for(const keyword of keywordList){const payload={data:{type:\"product_database_query\",attributes:{include_keywords:[keyword],exclude_unavailable_products:true}}};try{const response=await axios.post(url,payload,{headers});console.log('API response received:',response);if(response.data&&response.data.data){const results=response.data.data.map(item=>({asin:item.id.replace('us/',''),title:item.attributes.title,brand:item.attributes.brand,price:item.attributes.price?item.attributes.price.toFixed(2):'0.00',reviews:item.attributes.reviews?Math.round(item.attributes.reviews):0,rating:item.attributes.rating?item.attributes.rating.toFixed(2):'0.00',category:item.attributes.category,sales:item.attributes.approximate_30_day_units_sold?item.attributes.approximate_30_day_units_sold:0,percentOfTotalSales:0,revenue:item.attributes.approximate_30_day_revenue?item.attributes.approximate_30_day_revenue.toFixed(2):'0.00',percentOfTotalRevenue:0,imageUrl:item.attributes.image_url,sellerType:item.attributes.seller_type,dateFirstAvailable:item.attributes.date_first_available}));allResults=[...allResults,...results];}else{console.error('Invalid response format:',response);}}catch(error){console.error(\"API request failed:\",error.response?error.response.data:error.message);if(error.response){console.error(\"Error data:\",error.response.data);console.error(\"Error status:\",error.response.status);console.error(\"Error headers:\",error.response.headers);}}}const uniqueResults=Array.from(new Set(allResults.map(item=>item.asin))).map(asin=>{return allResults.find(item=>item.asin===asin);});const totalSales=uniqueResults.reduce((sum,item)=>sum+item.sales,0);const totalRevenue=uniqueResults.reduce((sum,item)=>sum+parseFloat(item.revenue),0);const processedResults=uniqueResults.map(item=>({...item,percentOfTotalSales:(item.sales/totalSales*100).toFixed(2)+'%',percentOfTotalRevenue:(parseFloat(item.revenue)/totalRevenue*100).toFixed(2)+'%'}));processedResults.sort((a,b)=>b.sales-a.sales);const averagePrice=(processedResults.reduce((sum,item)=>sum+parseFloat(item.price),0)/processedResults.length).toFixed(2);const averageReviews=(processedResults.reduce((sum,item)=>sum+item.reviews,0)/processedResults.length).toFixed(0);const summary={asin:\"Summary\",title:\"\",brand:\"\",price:averagePrice,reviews:averageReviews,rating:\"\",category:\"\",sales:totalSales,percentOfTotalSales:\"100%\",revenue:totalRevenue.toFixed(2),percentOfTotalRevenue:\"100%\",imageUrl:\"\",sellerType:\"\",dateFirstAvailable:\"\"};setSummaryData(summary);setData([summary,...processedResults]);setLoading(false);};const getPriceSegments=()=>{const priceSegments={};data.slice(1).forEach(item=>{const lowPrice=Math.floor(item.price/5)*5;const highPrice=lowPrice+4.99;const priceSegment=\"$\".concat(lowPrice.toFixed(2),\" - $\").concat(highPrice.toFixed(2));if(!priceSegments[priceSegment]){priceSegments[priceSegment]={sales:0,revenue:0,count:0,averagePrice:0,averageReviews:0,items:[]};}priceSegments[priceSegment].sales+=item.sales;priceSegments[priceSegment].revenue+=parseFloat(item.revenue);priceSegments[priceSegment].count+=1;priceSegments[priceSegment].averagePrice+=parseFloat(item.price);priceSegments[priceSegment].averageReviews+=item.reviews;priceSegments[priceSegment].items.push(item);});const segmentData=Object.keys(priceSegments).map(segment=>{const segmentInfo=priceSegments[segment];return{asin:segment,title:segment,// Label the price range\nbrand:\"\",price:(segmentInfo.averagePrice/segmentInfo.count).toFixed(2),reviews:(segmentInfo.averageReviews/segmentInfo.count).toFixed(0),rating:\"\",category:\"\",sales:segmentInfo.sales,percentOfTotalSales:(segmentInfo.sales/summaryData.sales*100).toFixed(2)+'%',revenue:segmentInfo.revenue.toFixed(2),percentOfTotalRevenue:(segmentInfo.revenue/summaryData.revenue*100).toFixed(2)+'%',imageUrl:\"\",sellerType:\"\",dateFirstAvailable:\"\",items:segmentInfo.items,productCount:segmentInfo.count// Add the product count here\n};}).filter(segment=>segment.sales>0);segmentData.sort((a,b)=>parseFloat(a.asin.split('-')[0].replace('$',''))-parseFloat(b.asin.split('-')[0].replace('$','')));return[summaryData,...segmentData];};const handleThemeToggle=()=>{setDarkMode(!darkMode);};const theme=createTheme({palette:{mode:darkMode?'dark':'light'}});return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Box,{my:4,display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Amazon Product Explorer\"}),/*#__PURE__*/_jsx(IconButton,{onClick:handleThemeToggle,color:\"inherit\",children:darkMode?/*#__PURE__*/_jsx(Brightness7Icon,{}):/*#__PURE__*/_jsx(Brightness4Icon,{})})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:2,sx:{marginRight:1},children:[/*#__PURE__*/_jsx(TextField,{label:\"Enter keywords separated by commas\",variant:\"outlined\",fullWidth:true,value:keywords,onChange:handleKeywordsChange}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleFetchData,disabled:loading,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Fetch Data'})]}),/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,children:[/*#__PURE__*/_jsx(Tab,{label:\"All Results\"}),/*#__PURE__*/_jsx(Tab,{label:\"Price Segments\"}),/*#__PURE__*/_jsx(Tab,{label:\"Winners\"})]}),/*#__PURE__*/_jsx(ScatterPlot,{data:data.slice(1)}),activeTab===0&&/*#__PURE__*/_jsx(DataTable,{data:data,summaryData:summaryData}),activeTab===1&&/*#__PURE__*/_jsx(DataTable,{data:getPriceSegments(),summaryData:summaryData,priceSegments:true}),activeTab===2&&/*#__PURE__*/_jsx(DataTable,{data:getPriceSegments().map(segment=>segment.items&&segment.items[0]).filter(item=>item),summaryData:summaryData})]})]});};export default MainComponent;","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","Container","Typography","Box","CircularProgress","Tabs","Tab","CssBaseline","IconButton","ThemeProvider","createTheme","DataTable","ScatterPlot","Brightness4Icon","Brightness7Icon","jsx","_jsx","jsxs","_jsxs","MainComponent","keywords","setKeywords","data","setData","summaryData","setSummaryData","loading","setLoading","activeTab","setActiveTab","darkMode","setDarkMode","console","log","handleKeywordsChange","event","target","value","handleTabChange","newValue","handleFetchData","apiKey","process","env","REACT_APP_JUNGLE_SCOUT_API_KEY","keyName","REACT_APP_JUNGLE_SCOUT_KEY_NAME","url","headers","concat","keywordList","split","map","keyword","trim","allResults","payload","type","attributes","include_keywords","exclude_unavailable_products","response","post","results","item","asin","id","replace","title","brand","price","toFixed","reviews","Math","round","rating","category","sales","approximate_30_day_units_sold","percentOfTotalSales","revenue","approximate_30_day_revenue","percentOfTotalRevenue","imageUrl","image_url","sellerType","seller_type","dateFirstAvailable","date_first_available","error","message","status","uniqueResults","Array","from","Set","find","totalSales","reduce","sum","totalRevenue","parseFloat","processedResults","sort","a","b","averagePrice","length","averageReviews","summary","getPriceSegments","priceSegments","slice","forEach","lowPrice","floor","highPrice","priceSegment","count","items","push","segmentData","Object","keys","segment","segmentInfo","productCount","filter","handleThemeToggle","theme","palette","mode","children","my","display","justifyContent","alignItems","variant","component","gutterBottom","onClick","color","mb","sx","marginRight","label","fullWidth","onChange","disabled","size"],"sources":["/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box, CircularProgress, Tabs, Tab, CssBaseline, IconButton } from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport DataTable from './components/DataTable';\nimport ScatterPlot from './components/ScatterPlot';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\n\nconst MainComponent = () => {\n    const [keywords, setKeywords] = useState('');\n    const [data, setData] = useState([]);\n    const [summaryData, setSummaryData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [activeTab, setActiveTab] = useState(0);\n    const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => {\n        console.log(\"Data updated:\", data);\n    }, [data]);\n\n    const handleKeywordsChange = (event) => {\n        setKeywords(event.target.value);\n        console.log('Keywords changed:', event.target.value);\n    };\n\n    const handleTabChange = (event, newValue) => {\n        setActiveTab(newValue);\n    };\n\n    const handleFetchData = async () => {\n        setLoading(true);\n        setData([]);\n        console.log('Fetching data for keywords:', keywords);\n\n        const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n        const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n        const url = \"https://developer.junglescout.com/api/product_database_query?marketplace=us\";\n\n        const headers = {\n            'Authorization': `${keyName}:${apiKey}`,\n            'X-API-Type': 'junglescout',\n            'Accept': 'application/vnd.junglescout.v1+json',\n            'Content-Type': 'application/vnd.api+json',\n        };\n\n        const keywordList = keywords.split(',').map(keyword => keyword.trim());\n\n        let allResults = [];\n\n        for (const keyword of keywordList) {\n            const payload = {\n                data: {\n                    type: \"product_database_query\",\n                    attributes: {\n                        include_keywords: [keyword],\n                        exclude_unavailable_products: true\n                    }\n                }\n            };\n\n            try {\n                const response = await axios.post(url, payload, { headers });\n\n                console.log('API response received:', response);\n\n                if (response.data && response.data.data) {\n                    const results = response.data.data.map(item => ({\n                        asin: item.id.replace('us/', ''),\n                        title: item.attributes.title,\n                        brand: item.attributes.brand,\n                        price: item.attributes.price ? item.attributes.price.toFixed(2) : '0.00',\n                        reviews: item.attributes.reviews ? Math.round(item.attributes.reviews) : 0,\n                        rating: item.attributes.rating ? item.attributes.rating.toFixed(2) : '0.00',\n                        category: item.attributes.category,\n                        sales: item.attributes.approximate_30_day_units_sold ? item.attributes.approximate_30_day_units_sold : 0,\n                        percentOfTotalSales: 0,\n                        revenue: item.attributes.approximate_30_day_revenue ? item.attributes.approximate_30_day_revenue.toFixed(2) : '0.00',\n                        percentOfTotalRevenue: 0,\n                        imageUrl: item.attributes.image_url,\n                        sellerType: item.attributes.seller_type,\n                        dateFirstAvailable: item.attributes.date_first_available,\n                    }));\n\n                    allResults = [...allResults, ...results];\n                } else {\n                    console.error('Invalid response format:', response);\n                }\n            } catch (error) {\n                console.error(\"API request failed:\", error.response ? error.response.data : error.message);\n                if (error.response) {\n                    console.error(\"Error data:\", error.response.data);\n                    console.error(\"Error status:\", error.response.status);\n                    console.error(\"Error headers:\", error.response.headers);\n                }\n            }\n        }\n\n        const uniqueResults = Array.from(new Set(allResults.map(item => item.asin)))\n            .map(asin => {\n                return allResults.find(item => item.asin === asin);\n            });\n\n        const totalSales = uniqueResults.reduce((sum, item) => sum + item.sales, 0);\n        const totalRevenue = uniqueResults.reduce((sum, item) => sum + parseFloat(item.revenue), 0);\n\n        const processedResults = uniqueResults.map(item => ({\n            ...item,\n            percentOfTotalSales: ((item.sales / totalSales) * 100).toFixed(2) + '%',\n            percentOfTotalRevenue: ((parseFloat(item.revenue) / totalRevenue) * 100).toFixed(2) + '%'\n        }));\n\n        processedResults.sort((a, b) => b.sales - a.sales);\n\n        const averagePrice = (processedResults.reduce((sum, item) => sum + parseFloat(item.price), 0) / processedResults.length).toFixed(2);\n        const averageReviews = (processedResults.reduce((sum, item) => sum + item.reviews, 0) / processedResults.length).toFixed(0);\n\n        const summary = {\n            asin: \"Summary\",\n            title: \"\",\n            brand: \"\",\n            price: averagePrice,\n            reviews: averageReviews,\n            rating: \"\",\n            category: \"\",\n            sales: totalSales,\n            percentOfTotalSales: \"100%\",\n            revenue: totalRevenue.toFixed(2),\n            percentOfTotalRevenue: \"100%\",\n            imageUrl: \"\",\n            sellerType: \"\",\n            dateFirstAvailable: \"\",\n        };\n\n        setSummaryData(summary);\n        setData([summary, ...processedResults]);\n        setLoading(false);\n    };\n\n    const getPriceSegments = () => {\n        const priceSegments = {};\n\n        data.slice(1).forEach((item) => {\n            const lowPrice = Math.floor(item.price / 5) * 5;\n            const highPrice = lowPrice + 4.99;\n            const priceSegment = `$${lowPrice.toFixed(2)} - $${highPrice.toFixed(2)}`;\n\n            if (!priceSegments[priceSegment]) {\n                priceSegments[priceSegment] = {\n                    sales: 0,\n                    revenue: 0,\n                    count: 0,\n                    averagePrice: 0,\n                    averageReviews: 0,\n                    items: []\n                };\n            }\n\n            priceSegments[priceSegment].sales += item.sales;\n            priceSegments[priceSegment].revenue += parseFloat(item.revenue);\n            priceSegments[priceSegment].count += 1;\n            priceSegments[priceSegment].averagePrice += parseFloat(item.price);\n            priceSegments[priceSegment].averageReviews += item.reviews;\n            priceSegments[priceSegment].items.push(item);\n        });\n\n        const segmentData = Object.keys(priceSegments).map(segment => {\n            const segmentInfo = priceSegments[segment];\n            return {\n                asin: segment,\n                title: segment, // Label the price range\n                brand: \"\",\n                price: (segmentInfo.averagePrice / segmentInfo.count).toFixed(2),\n                reviews: (segmentInfo.averageReviews / segmentInfo.count).toFixed(0),\n                rating: \"\",\n                category: \"\",\n                sales: segmentInfo.sales,\n                percentOfTotalSales: ((segmentInfo.sales / summaryData.sales) * 100).toFixed(2) + '%',\n                revenue: segmentInfo.revenue.toFixed(2),\n                percentOfTotalRevenue: ((segmentInfo.revenue / summaryData.revenue) * 100).toFixed(2) + '%',\n                imageUrl: \"\",\n                sellerType: \"\",\n                dateFirstAvailable: \"\",\n                items: segmentInfo.items,\n                productCount: segmentInfo.count // Add the product count here\n            };\n        }).filter(segment => segment.sales > 0);\n\n        segmentData.sort((a, b) => parseFloat(a.asin.split('-')[0].replace('$', '')) - parseFloat(b.asin.split('-')[0].replace('$', '')));\n\n        return [summaryData, ...segmentData];\n    };\n\n    const handleThemeToggle = () => {\n        setDarkMode(!darkMode);\n    };\n\n    const theme = createTheme({\n        palette: {\n            mode: darkMode ? 'dark' : 'light',\n        },\n    });\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Container>\n                <Box my={4} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                        Amazon Product Explorer\n                    </Typography>\n                    <IconButton onClick={handleThemeToggle} color=\"inherit\">\n                        {darkMode ? <Brightness7Icon /> : <Brightness4Icon />}\n                    </IconButton>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\" mb={2} sx={{ marginRight: 1 }}>\n                    <TextField\n                        label=\"Enter keywords separated by commas\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={keywords}\n                        onChange={handleKeywordsChange}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleFetchData} disabled={loading}>\n                        {loading ? <CircularProgress size={24} /> : 'Fetch Data'}\n                    </Button>\n                </Box>\n                <Tabs value={activeTab} onChange={handleTabChange}>\n                    <Tab label=\"All Results\" />\n                    <Tab label=\"Price Segments\" />\n                    <Tab label=\"Winners\" />\n                </Tabs>\n                <ScatterPlot data={data.slice(1)} />\n                {activeTab === 0 && <DataTable data={data} summaryData={summaryData} />}\n                {activeTab === 1 && <DataTable data={getPriceSegments()} summaryData={summaryData} priceSegments />}\n                {activeTab === 2 && <DataTable data={getPriceSegments().map(segment => segment.items && segment.items[0]).filter(item => item)} summaryData={summaryData} />}\n            </Container>\n        </ThemeProvider>\n    );\n};\n\nexport default MainComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}