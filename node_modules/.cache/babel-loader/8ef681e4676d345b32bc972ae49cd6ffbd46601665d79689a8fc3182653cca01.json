{"ast":null,"code":"var _jsxFileName = \"/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box, CircularProgress } from '@mui/material';\nimport DataTable from './DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainComponent = () => {\n  _s();\n  const [keywords, setKeywords] = useState('');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleKeywordsChange = event => {\n    setKeywords(event.target.value);\n    console.log('Keywords changed:', event.target.value);\n  };\n  const handleFetchData = async () => {\n    setLoading(true);\n    setData([]);\n    console.log('Fetching data for keywords:', keywords);\n    const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n    const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n    const url = \"https://developer.junglescout.com/api/product_database_query?marketplace=us\";\n    const headers = {\n      'Authorization': `${keyName}:${apiKey}`,\n      'X-API-Type': 'junglescout',\n      'Accept': 'application/vnd.junglescout.v1+json',\n      'Content-Type': 'application/vnd.api+json'\n    };\n    const keywordList = keywords.split(',').map(keyword => keyword.trim());\n    let allResults = [];\n    for (const keyword of keywordList) {\n      const payload = {\n        data: {\n          type: \"product_database_query\",\n          attributes: {\n            include_keywords: [keyword],\n            exclude_unavailable_products: true\n          }\n        }\n      };\n      try {\n        const response = await axios.post(url, payload, {\n          headers\n        });\n        console.log('API response received:', response);\n        if (response.data && response.data.data) {\n          const results = response.data.data.map(item => ({\n            asin: item.id.replace('us/', ''),\n            title: item.attributes.title,\n            brand: item.attributes.brand,\n            price: item.attributes.price,\n            reviews: item.attributes.reviews,\n            rating: item.attributes.rating,\n            category: item.attributes.category,\n            sales: item.attributes.approximate_30_day_units_sold,\n            revenue: item.attributes.approximate_30_day_revenue,\n            imageUrl: item.attributes.image_url,\n            sellerType: item.attributes.seller_type,\n            dateFirstAvailable: item.attributes.date_first_available,\n            originalKeyword: keyword\n          }));\n          allResults = [...allResults, ...results];\n        } else {\n          console.error('Invalid response format:', response);\n        }\n      } catch (error) {\n        console.error(\"API request failed:\", error.response ? error.response.data : error.message);\n      }\n    }\n\n    // Sort the results by sales in descending order\n    allResults.sort((a, b) => b.sales - a.sales);\n\n    // Calculate summary data\n    const totalSales = allResults.reduce((sum, item) => sum + item.sales, 0);\n    const totalRevenue = allResults.reduce((sum, item) => sum + item.revenue, 0);\n    const averagePrice = (allResults.reduce((sum, item) => sum + item.price, 0) / allResults.length).toFixed(2);\n    const averageReviews = (allResults.reduce((sum, item) => sum + item.reviews, 0) / allResults.length).toFixed(2);\n    const summaryData = {\n      asin: \"Summary\",\n      title: \"Summary\",\n      brand: \"\",\n      price: averagePrice,\n      reviews: averageReviews,\n      rating: \"\",\n      category: \"\",\n      sales: totalSales,\n      revenue: totalRevenue,\n      imageUrl: \"\",\n      sellerType: \"\",\n      dateFirstAvailable: \"\",\n      originalKeyword: \"\"\n    };\n    setData([summaryData, ...allResults]);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Jungle Scout Product Explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Enter keywords separated by commas\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: keywords,\n          onChange: handleKeywordsChange,\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleFetchData,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 36\n          }, this) : 'Fetch Data'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(MainComponent, \"INdqove7WM7F5yfRywKxdtHXeEc=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Container","Typography","Box","CircularProgress","DataTable","jsxDEV","_jsxDEV","MainComponent","_s","keywords","setKeywords","data","setData","loading","setLoading","handleKeywordsChange","event","target","value","console","log","handleFetchData","apiKey","process","env","REACT_APP_JUNGLE_SCOUT_API_KEY","keyName","REACT_APP_JUNGLE_SCOUT_KEY_NAME","url","headers","keywordList","split","map","keyword","trim","allResults","payload","type","attributes","include_keywords","exclude_unavailable_products","response","post","results","item","asin","id","replace","title","brand","price","reviews","rating","category","sales","approximate_30_day_units_sold","revenue","approximate_30_day_revenue","imageUrl","image_url","sellerType","seller_type","dateFirstAvailable","date_first_available","originalKeyword","error","message","sort","a","b","totalSales","reduce","sum","totalRevenue","averagePrice","length","toFixed","averageReviews","summaryData","children","my","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","mb","label","fullWidth","onChange","style","marginRight","color","onClick","disabled","size","_c","$RefreshReg$"],"sources":["/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Box, CircularProgress } from '@mui/material';\nimport DataTable from './DataTable';\n\nconst MainComponent = () => {\n    const [keywords, setKeywords] = useState('');\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const handleKeywordsChange = (event) => {\n        setKeywords(event.target.value);\n        console.log('Keywords changed:', event.target.value);\n    };\n\n    const handleFetchData = async () => {\n        setLoading(true);\n        setData([]);\n        console.log('Fetching data for keywords:', keywords);\n\n        const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n        const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n        const url = \"https://developer.junglescout.com/api/product_database_query?marketplace=us\";\n\n        const headers = {\n            'Authorization': `${keyName}:${apiKey}`,\n            'X-API-Type': 'junglescout',\n            'Accept': 'application/vnd.junglescout.v1+json',\n            'Content-Type': 'application/vnd.api+json',\n        };\n\n        const keywordList = keywords.split(',').map(keyword => keyword.trim());\n\n        let allResults = [];\n        \n        for (const keyword of keywordList) {\n            const payload = {\n                data: {\n                    type: \"product_database_query\",\n                    attributes: {\n                        include_keywords: [keyword],\n                        exclude_unavailable_products: true\n                    }\n                }\n            };\n\n            try {\n                const response = await axios.post(url, payload, { headers });\n\n                console.log('API response received:', response);\n\n                if (response.data && response.data.data) {\n                    const results = response.data.data.map(item => ({\n                        asin: item.id.replace('us/', ''),\n                        title: item.attributes.title,\n                        brand: item.attributes.brand,\n                        price: item.attributes.price,\n                        reviews: item.attributes.reviews,\n                        rating: item.attributes.rating,\n                        category: item.attributes.category,\n                        sales: item.attributes.approximate_30_day_units_sold,\n                        revenue: item.attributes.approximate_30_day_revenue,\n                        imageUrl: item.attributes.image_url,\n                        sellerType: item.attributes.seller_type,\n                        dateFirstAvailable: item.attributes.date_first_available,\n                        originalKeyword: keyword\n                    }));\n\n                    allResults = [...allResults, ...results];\n                } else {\n                    console.error('Invalid response format:', response);\n                }\n            } catch (error) {\n                console.error(\"API request failed:\", error.response ? error.response.data : error.message);\n            }\n        }\n\n        // Sort the results by sales in descending order\n        allResults.sort((a, b) => b.sales - a.sales);\n\n        // Calculate summary data\n        const totalSales = allResults.reduce((sum, item) => sum + item.sales, 0);\n        const totalRevenue = allResults.reduce((sum, item) => sum + item.revenue, 0);\n        const averagePrice = (allResults.reduce((sum, item) => sum + item.price, 0) / allResults.length).toFixed(2);\n        const averageReviews = (allResults.reduce((sum, item) => sum + item.reviews, 0) / allResults.length).toFixed(2);\n\n        const summaryData = {\n            asin: \"Summary\",\n            title: \"Summary\",\n            brand: \"\",\n            price: averagePrice,\n            reviews: averageReviews,\n            rating: \"\",\n            category: \"\",\n            sales: totalSales,\n            revenue: totalRevenue,\n            imageUrl: \"\",\n            sellerType: \"\",\n            dateFirstAvailable: \"\",\n            originalKeyword: \"\"\n        };\n\n        setData([summaryData, ...allResults]);\n        setLoading(false);\n    };\n\n    return (\n        <Container>\n            <Box my={4}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Jungle Scout Product Explorer\n                </Typography>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                    <TextField\n                        label=\"Enter keywords separated by commas\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={keywords}\n                        onChange={handleKeywordsChange}\n                        style={{ marginRight: 10 }}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleFetchData} disabled={loading}>\n                        {loading ? <CircularProgress size={24} /> : 'Fetch Data'}\n                    </Button>\n                </Box>\n                <DataTable data={data} />\n            </Box>\n        </Container>\n    );\n};\n\nexport default MainComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}