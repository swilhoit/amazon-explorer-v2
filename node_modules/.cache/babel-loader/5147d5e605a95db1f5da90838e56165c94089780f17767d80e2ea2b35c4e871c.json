{"ast":null,"code":"var _jsxFileName = \"/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Tabs, Tab, Container, Paper, TableContainer, TextField, IconButton, Toolbar, Box, Button } from '@material-ui/core';\nimport { Brightness4, Brightness7 } from '@material-ui/icons';\nimport ScatterPlot from './components/ScatterPlot';\nimport DataTable from './components/DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: theme.palette.background.default\n  },\n  appBar: {\n    marginBottom: theme.spacing(2)\n  },\n  searchContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2)\n  },\n  searchField: {\n    flexGrow: 1,\n    marginRight: theme.spacing(2)\n  },\n  tableContainer: {\n    maxHeight: '60vh'\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  toggleButton: {\n    marginLeft: 'auto'\n  }\n}));\nconst MainComponent = () => {\n  _s();\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [keyword, setKeyword] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  const [resultCount, setResultCount] = useState(0);\n  useEffect(() => {\n    if (keyword) {\n      fetchData(keyword);\n    }\n  }, [keyword]);\n  const fetchData = async keyword => {\n    try {\n      const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n      const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n      const headers = {\n        'Authorization': `${keyName}:${apiKey}`,\n        'X-API-Type': 'junglescout',\n        'Accept': 'application/vnd.junglescout.v1+json',\n        'Content-Type': 'application/vnd.api+json'\n      };\n      const response = await axios.post('https://developer.junglescout.com/api/product_database_query', {\n        data: {\n          type: 'product_database_query',\n          attributes: {\n            include_keywords: [keyword],\n            exclude_unavailable_products: true\n          }\n        }\n      }, {\n        headers,\n        params: {\n          marketplace: 'us',\n          sort: '-revenue',\n          'page[size]': 50\n        }\n      });\n      if (response.data && response.data.data) {\n        const results = response.data.data;\n        setResultCount(results.length);\n        setData(results);\n        setFilteredData(results);\n      }\n    } catch (error) {\n      console.error('API request failed:', error);\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabIndex(newValue);\n    switch (newValue) {\n      case 1:\n        // Price Segments\n        handlePriceSegments();\n        break;\n      case 2:\n        // Winners\n        handleWinners();\n        break;\n      case 3:\n        // Brand\n        handleBrandBreakdown();\n        break;\n      default:\n        setFilteredData(data);\n    }\n  };\n  const handlePriceSegments = () => {\n    const priceSegments = {};\n    data.forEach(item => {\n      const price = item.attributes.price;\n      const lowerBound = Math.floor(price / 5) * 5;\n      const upperBound = lowerBound + 4.99;\n      const segment = `$${lowerBound.toFixed(2)}-$${upperBound.toFixed(2)}`;\n      if (!priceSegments[segment]) {\n        priceSegments[segment] = {\n          priceRange: segment,\n          sales: 0,\n          revenue: 0,\n          items: []\n        };\n      }\n      priceSegments[segment].sales += item.attributes.approximate_30_day_units_sold;\n      priceSegments[segment].revenue += item.attributes.approximate_30_day_revenue;\n      priceSegments[segment].items.push(item);\n    });\n    const segmentsArray = Object.values(priceSegments).filter(segment => segment.sales > 0);\n    segmentsArray.sort((a, b) => parseFloat(a.priceRange.split('-')[0].replace('$', '')) - parseFloat(b.priceRange.split('-')[0].replace('$', '')));\n    setFilteredData(segmentsArray);\n  };\n  const handleWinners = () => {\n    const priceSegments = {};\n    data.forEach(item => {\n      const price = item.attributes.price;\n      const lowerBound = Math.floor(price / 5) * 5;\n      const upperBound = lowerBound + 4.99;\n      const segment = `$${lowerBound.toFixed(2)}-$${upperBound.toFixed(2)}`;\n      if (!priceSegments[segment] || priceSegments[segment].revenue < item.attributes.approximate_30_day_revenue) {\n        priceSegments[segment] = {\n          ...item,\n          priceRange: segment\n        };\n      }\n    });\n    const winnersArray = Object.values(priceSegments);\n    winnersArray.sort((a, b) => parseFloat(a.priceRange.split('-')[0].replace('$', '')) - parseFloat(b.priceRange.split('-')[0].replace('$', '')));\n    setFilteredData(winnersArray);\n  };\n  const handleBrandBreakdown = () => {\n    const brandData = {};\n    data.forEach(item => {\n      const brand = item.attributes.brand;\n      if (!brandData[brand]) {\n        brandData[brand] = {\n          brand: brand,\n          sales: 0\n        };\n      }\n      brandData[brand].sales += item.attributes.approximate_30_day_units_sold;\n    });\n    const totalSales = Object.values(brandData).reduce((sum, brand) => sum + brand.sales, 0);\n    const brandArray = Object.values(brandData).map(brand => ({\n      ...brand,\n      salesPercentage: (brand.sales / totalSales * 100).toFixed(2)\n    }));\n    setFilteredData(brandArray);\n  };\n  const handleSearch = () => {\n    fetchData(keyword);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabIndex,\n          onChange: handleTabChange,\n          \"aria-label\": \"simple tabs example\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"All Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Price Segments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Winners\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          color: \"inherit\",\n          onClick: toggleDarkMode,\n          className: classes.toggleButton,\n          children: darkMode ? /*#__PURE__*/_jsxDEV(Brightness7, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Brightness4, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.searchContainer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.searchField,\n          label: \"Keyword\",\n          variant: \"outlined\",\n          value: keyword,\n          onChange: e => setKeyword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ScatterPlot, {\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Results: \", resultCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          data: filteredData,\n          tabIndex: tabIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n};\n_s(MainComponent, \"b9XfuysJ/ssnGcHbCsKmeWaRJ9g=\", false, function () {\n  return [useStyles];\n});\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","makeStyles","AppBar","Tabs","Tab","Container","Paper","TableContainer","TextField","IconButton","Toolbar","Box","Button","Brightness4","Brightness7","ScatterPlot","DataTable","jsxDEV","_jsxDEV","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","table","minWidth","default","appBar","marginBottom","spacing","searchContainer","display","justifyContent","alignItems","searchField","marginRight","tableContainer","maxHeight","toolbar","toggleButton","marginLeft","MainComponent","_s","classes","data","setData","filteredData","setFilteredData","tabIndex","setTabIndex","keyword","setKeyword","darkMode","setDarkMode","resultCount","setResultCount","fetchData","apiKey","process","env","REACT_APP_JUNGLE_SCOUT_API_KEY","keyName","REACT_APP_JUNGLE_SCOUT_KEY_NAME","headers","response","post","type","attributes","include_keywords","exclude_unavailable_products","params","marketplace","sort","results","length","error","console","handleTabChange","event","newValue","handlePriceSegments","handleWinners","handleBrandBreakdown","priceSegments","forEach","item","price","lowerBound","Math","floor","upperBound","segment","toFixed","priceRange","sales","revenue","items","approximate_30_day_units_sold","approximate_30_day_revenue","push","segmentsArray","Object","values","filter","a","b","parseFloat","split","replace","winnersArray","brandData","brand","totalSales","reduce","sum","brandArray","map","salesPercentage","handleSearch","toggleDarkMode","className","children","position","value","onChange","label","fileName","_jsxFileName","lineNumber","columnNumber","edge","color","onClick","variant","e","target","component","_c","$RefreshReg$"],"sources":["/Users/samwilhoit/Downloads/jungle-scout-explorer/src/MainComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Tabs, Tab, Container, Paper, TableContainer, TextField, IconButton, Toolbar, Box, Button } from '@material-ui/core';\nimport { Brightness4, Brightness7 } from '@material-ui/icons';\nimport ScatterPlot from './components/ScatterPlot';\nimport DataTable from './components/DataTable';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    table: {\n        minWidth: 650,\n        backgroundColor: theme.palette.background.default,\n    },\n    appBar: {\n        marginBottom: theme.spacing(2),\n    },\n    searchContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    searchField: {\n        flexGrow: 1,\n        marginRight: theme.spacing(2),\n    },\n    tableContainer: {\n        maxHeight: '60vh',\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    toggleButton: {\n        marginLeft: 'auto',\n    }\n}));\n\nconst MainComponent = () => {\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [tabIndex, setTabIndex] = useState(0);\n    const [keyword, setKeyword] = useState('');\n    const [darkMode, setDarkMode] = useState(false);\n    const [resultCount, setResultCount] = useState(0);\n\n    useEffect(() => {\n        if (keyword) {\n            fetchData(keyword);\n        }\n    }, [keyword]);\n\n    const fetchData = async (keyword) => {\n        try {\n            const apiKey = process.env.REACT_APP_JUNGLE_SCOUT_API_KEY;\n            const keyName = process.env.REACT_APP_JUNGLE_SCOUT_KEY_NAME;\n            const headers = {\n                'Authorization': `${keyName}:${apiKey}`,\n                'X-API-Type': 'junglescout',\n                'Accept': 'application/vnd.junglescout.v1+json',\n                'Content-Type': 'application/vnd.api+json'\n            };\n\n            const response = await axios.post(\n                'https://developer.junglescout.com/api/product_database_query',\n                {\n                    data: {\n                        type: 'product_database_query',\n                        attributes: {\n                            include_keywords: [keyword],\n                            exclude_unavailable_products: true\n                        }\n                    }\n                },\n                {\n                    headers,\n                    params: {\n                        marketplace: 'us',\n                        sort: '-revenue',\n                        'page[size]': 50\n                    }\n                }\n            );\n\n            if (response.data && response.data.data) {\n                const results = response.data.data;\n                setResultCount(results.length);\n                setData(results);\n                setFilteredData(results);\n            }\n        } catch (error) {\n            console.error('API request failed:', error);\n        }\n    };\n\n    const handleTabChange = (event, newValue) => {\n        setTabIndex(newValue);\n        switch (newValue) {\n            case 1: // Price Segments\n                handlePriceSegments();\n                break;\n            case 2: // Winners\n                handleWinners();\n                break;\n            case 3: // Brand\n                handleBrandBreakdown();\n                break;\n            default:\n                setFilteredData(data);\n        }\n    };\n\n    const handlePriceSegments = () => {\n        const priceSegments = {};\n        data.forEach(item => {\n            const price = item.attributes.price;\n            const lowerBound = Math.floor(price / 5) * 5;\n            const upperBound = lowerBound + 4.99;\n            const segment = `$${lowerBound.toFixed(2)}-$${upperBound.toFixed(2)}`;\n            if (!priceSegments[segment]) {\n                priceSegments[segment] = {\n                    priceRange: segment,\n                    sales: 0,\n                    revenue: 0,\n                    items: []\n                };\n            }\n            priceSegments[segment].sales += item.attributes.approximate_30_day_units_sold;\n            priceSegments[segment].revenue += item.attributes.approximate_30_day_revenue;\n            priceSegments[segment].items.push(item);\n        });\n\n        const segmentsArray = Object.values(priceSegments).filter(segment => segment.sales > 0);\n        segmentsArray.sort((a, b) => parseFloat(a.priceRange.split('-')[0].replace('$', '')) - parseFloat(b.priceRange.split('-')[0].replace('$', '')));\n        setFilteredData(segmentsArray);\n    };\n\n    const handleWinners = () => {\n        const priceSegments = {};\n        data.forEach(item => {\n            const price = item.attributes.price;\n            const lowerBound = Math.floor(price / 5) * 5;\n            const upperBound = lowerBound + 4.99;\n            const segment = `$${lowerBound.toFixed(2)}-$${upperBound.toFixed(2)}`;\n            if (!priceSegments[segment] || (priceSegments[segment].revenue < item.attributes.approximate_30_day_revenue)) {\n                priceSegments[segment] = {\n                    ...item,\n                    priceRange: segment\n                };\n            }\n        });\n\n        const winnersArray = Object.values(priceSegments);\n        winnersArray.sort((a, b) => parseFloat(a.priceRange.split('-')[0].replace('$', '')) - parseFloat(b.priceRange.split('-')[0].replace('$', '')));\n        setFilteredData(winnersArray);\n    };\n\n    const handleBrandBreakdown = () => {\n        const brandData = {};\n        data.forEach(item => {\n            const brand = item.attributes.brand;\n            if (!brandData[brand]) {\n                brandData[brand] = {\n                    brand: brand,\n                    sales: 0\n                };\n            }\n            brandData[brand].sales += item.attributes.approximate_30_day_units_sold;\n        });\n\n        const totalSales = Object.values(brandData).reduce((sum, brand) => sum + brand.sales, 0);\n        const brandArray = Object.values(brandData).map(brand => ({\n            ...brand,\n            salesPercentage: ((brand.sales / totalSales) * 100).toFixed(2)\n        }));\n\n        setFilteredData(brandArray);\n    };\n\n    const handleSearch = () => {\n        fetchData(keyword);\n    };\n\n    const toggleDarkMode = () => {\n        setDarkMode(!darkMode);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    <Tabs value={tabIndex} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                        <Tab label=\"All Results\" />\n                        <Tab label=\"Price Segments\" />\n                        <Tab label=\"Winners\" />\n                        <Tab label=\"Brand\" />\n                    </Tabs>\n                    <IconButton\n                        edge=\"end\"\n                        color=\"inherit\"\n                        onClick={toggleDarkMode}\n                        className={classes.toggleButton}\n                    >\n                        {darkMode ? <Brightness7 /> : <Brightness4 />}\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Container>\n                <div className={classes.searchContainer}>\n                    <TextField\n                        className={classes.searchField}\n                        label=\"Keyword\"\n                        variant=\"outlined\"\n                        value={keyword}\n                        onChange={(e) => setKeyword(e.target.value)}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\n                        Search\n                    </Button>\n                </div>\n                <ScatterPlot data={filteredData} />\n                <p>Total Results: {resultCount}</p>\n                <TableContainer component={Paper} className={classes.tableContainer}>\n                    <DataTable data={filteredData} tabIndex={tabIndex} />\n                </TableContainer>\n            </Container>\n        </div>\n    );\n};\n\nexport default MainComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}